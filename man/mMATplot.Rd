% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mMATplot.R
\name{mMATplot}
\alias{mMATplot}
\title{Plot 2 interaction matrices}
\usage{
mMATplot(
  matrix.upper,
  matrix.lower,
  start,
  stop,
  bin.width,
  log2 = TRUE,
  scale.colors = "H",
  matrix.upper.txt = NULL,
  matrix.lower.txt = NULL,
  tad.upper.tri = NULL,
  tad.lower.tri = NULL,
  loop.bedpe = NULL,
  tad.chr = NULL,
  annotations.color = "red",
  tad.upper.line = NULL,
  tad.lower.line = NULL,
  tad.line.col = NULL,
  line.colors = c("red", "blue")
)
}
\arguments{
\item{matrix.upper, matrix.lower}{\code{dgCMatrix} or \code{matrix} object for only one chromosome.}

\item{start, stop}{Region of interest in base pair.}

\item{bin.width}{Bin width of the matrix in base pair.}

\item{log2}{logical. Use the log2 of the matrix values. Default is \code{TRUE}.}

\item{scale.colors}{A character string indicating the color map option to use. Eight colors palettes are available from \code{viridis} package. Another palette \code{"OE"} is made for data centered on 0 (e.g log2 of observed/expected matrix). Default is \code{"H"}:
\itemize{
\item \code{"ObsExp"} (or \code{"OE"}),
\item \code{"magma"} (or \code{"A"}),
\item \code{"inferno"} (or \code{"B"}),
\item \code{"plasma"} (or \code{"C"}),
\item \code{"viridis"} (or \code{"D"}),
\item \code{"cividis"} (or \code{"E"}),
\item \code{"rocket"} (or \code{"F"}),
\item \code{"mako"} (or \code{"G"}),
\item \code{"turbo"} (or \code{"H"}).
}}

\item{matrix.upper.txt, matrix.lower.txt}{text to write on the upper or lower part of the matrix.}

\item{tad.upper.tri, tad.lower.tri}{\code{data.frame}, \code{GRanges} or the bed files path with the TAD to plot as triangle in the upper or lower part of the matrix. Default is \code{NULL}.}

\item{loop.bedpe}{\code{data.frame} or bedpe files path to plot on both parts of the matrix. Six columns table (chr1, start1, end1, chr2, start2, end2) that gives loops between 2 areas. Default is \code{NULL}}

\item{tad.chr}{Chromosome name to filter annotations (domains and loop). Default is \code{NULL}}

\item{annotations.color}{Color for loop and triangular annotations. Default is \code{"red"}.}

\item{tad.upper.line, tad.lower.line}{\code{data.frame}, \code{GRanges} or the bed files path with the TAD to plot as line in the upper or lower parts of the matrix. Default is \code{NULL}.}

\item{tad.line.col}{Column number of \code{tad.upper.line} and \code{tad.lower.line} files that contain factors used to color upper and lower lines. Default is \code{NULL}.}

\item{line.colors}{Colors for \code{tad.upper.line} and \code{tad.lower.line}. Default is \code{c("red", "blue")}.}
}
\value{
\code{ggplot}
}
\description{
Same as \code{MATplot()} function but \code{mMATplot()} allow to plot 2 different matrices on the upper and lower part of the plot.
Two types of annotations can be added:
-domains (e.g. TADs or compartments) are plot as triangles or lines on the upper or/and lower part of the matrix.
-interactions between domains/bins (loop) are plot as squares on the upper and lower part of the matrix.
}
\details{
The matrix input must be a \code{dgCMatrix} or a \code{matrix} object for only one chromosome (see \code{coolFetch} function to read cool files).
All domains (TADs or compartments) are bed files (3 columns: chr, start and end) and can be R object (\code{dataframe} or \code{GRanges}) or the path of the files.
For \code{tad.lines}, another column can be used to specify different classes of domains (e.g compartment A or B). To use those domain classes, specify the column number (of the \code{tad.upper.line} and \code{tad.lower.line} inputs) with \code{tad.line.col} parameter and a custom set of colors with \code{line.colors} parameter.
Loop are stored in bedpe files (6 columns: chr1, start1, end, chr2, start2 and end2) and can be a \code{dataframe} object or the path of the file.
Chromosome domains and loops can be filter using \code{tad.chr} parameter.
}
\examples{
mMATplot(matrix.upper = matrix_1_chr25_50kb,
    matrix.lower = matrix_1_chr25_50kb,
    start = 10e6, stop = 30e6,
    bin.width = 50e3, log2 = TRUE)
}
